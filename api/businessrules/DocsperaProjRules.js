const PROVIDER_COUNT_BY_STATE = "SELECT COUNT(DISTINCT MEDICARE_PROVIDERS.PROVIDER_TYPE), ZIP_CODE.STATE " +
"FROM MEDICARE_PROVIDERS " + 
"INNER JOIN ZIP_CODE ON MEDICARE_PROVIDERS.nppes_provider_zip=ZIP_CODE.ZIP " + 
"WHERE NPPES_ENTITY_CODE = 'I' AND NPPES_PROVIDER_COUNTRY = 'US' " +
"GROUP BY ZIP_CODE.STATE";

const AVG_COST_BY_STATE = "SELECT ROUND(AVG(MEDICARE_PROVIDERS.TOTAL_MEDICARE_PAYMENT_AMT), 2) AS AVERAGE_COST, ZIP_CODE.STATE " + 
"FROM MEDICARE_PROVIDERS " +
"INNER JOIN ZIP_CODE ON MEDICARE_PROVIDERS.nppes_provider_zip=ZIP_CODE.ZIP " +
"WHERE NPPES_ENTITY_CODE = 'I' AND NPPES_PROVIDER_COUNTRY = 'US' " +
"GROUP BY ZIP_CODE.STATE";

const PERC_DIABETIC_BY_STATE = "SELECT ROUND(AVG(MEDICARE_PROVIDERS.beneficiary_cc_diab_percent::int), 2) AS PERCENT_DIABETIC, ZIP_CODE.STATE " +
"FROM MEDICARE_PROVIDERS " + 
"INNER JOIN ZIP_CODE ON MEDICARE_PROVIDERS.NPPES_PROVIDER_ZIP=ZIP_CODE.ZIP " +
"WHERE NPPES_PROVIDER_COUNTRY = 'US' AND MEDICARE_PROVIDERS.beneficiary_cc_diab_percent != '' " +
"GROUP BY ZIP_CODE.STATE";


module.exports = {PROVIDER_COUNT_BY_STATE, AVG_COST_BY_STATE, PERC_DIABETIC_BY_STATE};